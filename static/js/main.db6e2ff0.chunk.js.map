{"version":3,"sources":["components/Form.js","components/Task.js","App.js","index.js"],"names":["MapForm","props","className","text","value","name","type","onChange","e","setName","target","date","setDate","time","setTime","onClick","onSave","id","onCancel","deleteButton","Form","delet","deleteTask","save","d","Date","toLocaleTimeString","split","join","saveTask","cancel","cancelTask","status","onDelete","Task","period","manageTask","App","useState","renderForm","setRenderForm","formStatus","setFormStatus","tasks","setTasks","now","setId","useEffect","firebase","database","ref","on","snapshot","vals","val","_records","key","push","console","log","map","task","substring","setInterval","updatedTasks","duePeriod","userDate","currentDate","timeDiff","getTime","days","Math","trunc","hours","mins","secs","dateDiff","fullDate","dateFormat","parseInt","splice","String","clearInterval","form","newTask","set","managedTask","remainingTasks","filter","child","remove","taskList","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db6e2ff0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction MapForm(props){\r\n\r\n    const task = {\r\n        'A': 'Task',\r\n        'M': 'Edit'\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n        <form>\r\n            <div className=\"name-section sect\">\r\n            <h4 className='form-header'>{task[props.text]}</h4>\r\n                <div className=\"input-field\">\r\n                    <label>Name</label>\r\n                    <input value={props.name} type=\"text\" onChange={(e)=>props.setName(e.target.value)}></input>\r\n                </div>\r\n            </div>\r\n            <div className=\"time-section sect\">\r\n            <h4 className=\"form-header\">Due By</h4>\r\n                <div className=\"input-field\">\r\n                    <label>Date</label>\r\n                    <input value={props.date} type=\"date\" onChange={(e)=>props.setDate(e.target.value)}></input>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label>Time</label>\r\n                    <input value={props.time} type=\"time\" onChange={(e)=>props.setTime(e.target.value)}></input>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div className=\"button-section\">\r\n            <button onClick={()=>props.onSave(props.id,props.name,props.time,props.date)}>Save</button>\r\n            <button onClick={props.onCancel}>Cancel</button>\r\n            {props.deleteButton}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default function Form(props){\r\n\r\n    const delet=()=>{\r\n        props.deleteTask(props.id);\r\n    }\r\n\r\n    const save=(id,name,time,date)=>{\r\n        let d = new Date();\r\n        d = d.toLocaleTimeString().split(':').join(' ').split(' ')[2];\r\n        time=time+\":\"+d;\r\n        props.saveTask(id,name,time,date);\r\n    }\r\n    const cancel=()=>{\r\n        props.cancelTask();\r\n    } \r\n    const deleteButton = <button onClick={delet}>Delete</button>\r\n\r\n\r\n\r\n    return(\r\n        props.status\r\n        ?<MapForm \r\n        text='A'\r\n        onSave={save} \r\n        onCancel={cancel} \r\n        deleteButton={null}\r\n        id={props.id}\r\n        time={props.time}\r\n        date={props.date}\r\n        name={props.name}\r\n        setName={props.setName}\r\n        setDate={props.setDate}\r\n        setTime={props.setTime}\r\n        />\r\n        :<MapForm \r\n        text='M'\r\n        onSave={save} \r\n        onCancel={cancel} \r\n        onDelete={delet}\r\n        deleteButton={deleteButton}\r\n        id={props.id}\r\n        time={props.time}\r\n        date={props.date}\r\n        name={props.name}\r\n        setName={props.setName}\r\n        setDate={props.setDate}\r\n        setTime={props.setTime}\r\n        />\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Task(props){\r\n\r\n\r\n    \r\n    const handleClick=()=>{\r\n        props.manageTask(props.id)\r\n    }\r\n    \r\n    return(\r\n        \r\n        <div className=\"task-list-container\">\r\n            \r\n            <div className=\"event\">\r\n                <div className=\"event-name\">{props.name}</div>\r\n                <div className=\"event-time\">\r\n                    <div className=\"event-item\">\r\n                        <div>{props.period[0]}</div>\r\n                        <div>DAY</div>\r\n                    </div>\r\n                    <div className=\"event-item\">\r\n                        <div>{props.period[1]}</div>\r\n                        <div>HRS</div>\r\n                    </div>\r\n                    <div className=\"event-item\">\r\n                        <div>{props.period[2]}</div>\r\n                        <div>MIN</div>\r\n                    </div>\r\n                    <div className=\"event-item\">\r\n                        <div>{props.period[3]}</div>\r\n                        <div>SEC</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"button\">\r\n            <button onClick={handleClick}>manage</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState,useEffect} from 'react';\r\nimport Form from './components/Form.js'\r\nimport Task from './components/Task.js'\r\nimport firebase from 'firebase';\r\n\r\nexport default function App(){\r\n\r\n  const [renderForm,setRenderForm] = useState(false);\r\n  const [formStatus,setFormStatus] = useState(true);\r\n  const [tasks,setTasks] = useState([]);\r\n  const [time,setTime] = useState('');\r\n  const [date,setDate] = useState('');\r\n  const [name,setName] = useState('');\r\n  const [id,setId] = useState(Date.now());\r\n\r\n  useEffect(()=>{\r\n    firebase.database().ref('todos').on('value', (snapshot) => {\r\n      const vals = snapshot.val();\r\n      let _records = [];\r\n      for(var key in vals){\r\n          _records.push({\r\n              ...vals[key],\r\n              period:[],\r\n              id:key\r\n          });\r\n      }\r\n      console.log(_records);\r\n      setTasks(_records)\r\n    });\r\n  },[])\r\n\r\n\r\n  const showForm=()=>{\r\n    setRenderForm(true)\r\n    setFormStatus(true)\r\n  }\r\n\r\n  const set_name=(e)=>{\r\n    setName(e)\r\n  }\r\n\r\n  const set_time=(e)=>{\r\n    setTime(e)\r\n  }\r\n\r\n  const set_date=(e)=>{\r\n    setDate(e)\r\n  }\r\n\r\n  const saveTask=(id,name,time,date)=>{\r\n    if (id && name && time && date){\r\n        const newTask = {\r\n        id:id,\r\n        name:name,\r\n        date:date,\r\n        time:time,\r\n        period:[]\r\n      }\r\n\r\n      if(formStatus){\r\n        setTasks([...tasks,newTask])\r\n          firebase.database().ref('todos').push().set({\r\n            ...newTask\r\n          })\r\n      } else{\r\n          const managedTask = tasks.map(task=>{\r\n            if(task.id===id){\r\n              task =  {...task,...newTask}\r\n            }\r\n            return task\r\n          })\r\n          setTasks(managedTask)\r\n            firebase.database().ref(`todos/${id}`).set({\r\n              ...newTask\r\n            })\r\n        }\r\n\r\n      setRenderForm(false)\r\n      setFormStatus(true)\r\n      setDate('')\r\n      setName('')\r\n      setTime('')\r\n      setId(Date.now())\r\n    }else{\r\n      cancelTask();\r\n    }\r\n  }\r\n\r\n  const cancelTask=()=>{\r\n    setRenderForm(false)\r\n    setDate('')\r\n    setName('')\r\n    setTime('')\r\n    setId(Date.now())\r\n  }\r\n\r\n  const deleteTask=(id)=>{\r\n    const remainingTasks = tasks.filter(task=>task.id !== id )\r\n    setTasks(remainingTasks);\r\n    const rootRef = firebase.database().ref().child('todos');\r\n    rootRef.child(id).remove();\r\n\r\n    setRenderForm(false)\r\n    setDate('')\r\n    setName('')\r\n    setTime('')\r\n    setId(Date.now())\r\n  }\r\n\r\n  const manageTask=(id)=>{\r\n    tasks.map(task=>{\r\n      if(task.id===id){\r\n        task.time = task.time.substring(0,5);\r\n        setDate(task.date)\r\n        setName(task.name)\r\n        setTime(task.time)\r\n        setId(task.id)\r\n      }return null;\r\n    })\r\n    setRenderForm(true)\r\n    setFormStatus(false)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    const id = setInterval(() => {\r\n      const updatedTasks = tasks.map(task=>{\r\n        let duePeriod = dateDiff(userDate(task.date,task.time),currentDate());\r\n       task = {...task,period:duePeriod}\r\n       return task;\r\n      })\r\n      \r\n      setTasks(updatedTasks)\r\n    }, 1000);\r\n    return ()=> clearInterval(id);\r\n  })\r\n\r\n\r\n  let form = renderForm\r\n  ?\r\n  <Form \r\n    status={formStatus} \r\n    cancelTask={cancelTask}\r\n    saveTask={saveTask}\r\n    deleteTask={deleteTask}\r\n    id={id}\r\n    time={time}\r\n    date={date}\r\n    name={name}\r\n    setName={set_name}\r\n    setTime={set_time}\r\n    setDate={set_date}\r\n  />\r\n  :\r\n  null;\r\n\r\n  const taskList= tasks.map((task)=>{\r\n    if(task===null){\r\n      return null\r\n    }\r\n    return <Task\r\n    id = {task.id}\r\n    key={task.id}\r\n    name={task.name}\r\n    period={task.period}\r\n    manageTask={manageTask}\r\n    />\r\n  });\r\n\r\n\r\n  return(\r\n    <div className=\"task-container\">\r\n      <h1 className=\"task-name\">\r\n        KEEP-UP \r\n      </h1>\r\n      <h3 className=\"task-button\">\r\n        <button\r\n         type=\"button\"\r\n         onClick={showForm}>Add New Task</button>\r\n      </h3>\r\n      <div>\r\n        {form}\r\n      </div>\r\n      {taskList}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\n\r\nfunction userDate(date,time){\r\n  let fullDate = [date,time]\r\n                .join(' ').split('-')\r\n                .join(' ').split(':')\r\n                .join(' ').split(' ');\r\n    let dateFormat = parseInt(fullDate[1])-1;\r\n    fullDate.splice(1,1,String(dateFormat));\r\n  return new Date(...fullDate)\r\n}\r\n\r\nfunction currentDate(){\r\n  return new Date();\r\n}\r\n\r\nfunction dateDiff(userDate,currentDate){\r\n  let timeDiff = userDate.getTime() - currentDate.getTime(); \r\n  if(timeDiff < 0){\r\n    return [0,0,0,0];\r\n  }\r\n  let days = Math.trunc((timeDiff / 86400000));\r\n  let hours = Math.trunc((timeDiff % 86400000) /  3600000);\r\n  let mins = Math.trunc(((timeDiff % 86400000) % 3600000) / 60000);\r\n  let secs = Math.trunc((((timeDiff % 86400000) % 3600000) % 60000) / 1000);\r\n    return [days, hours, mins, secs];\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js'\r\nimport './index.css'\r\nimport firebase from 'firebase'\r\n\r\n  // web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDkSkoxoTRYIBW38ajxXFcvnJtuv6BaEmY\",\r\n    authDomain: \"todo-461d0.firebaseapp.com\",\r\n    databaseURL: \"https://todo-461d0.firebaseio.com\",\r\n    projectId: \"todo-461d0\",\r\n    storageBucket: \"todo-461d0.appspot.com\",\r\n    messagingSenderId: \"877108830246\",\r\n    appId: \"1:877108830246:web:5ec20077c98a4b70cb06e7\",\r\n    measurementId: \"G-TH5BTQ0JCJ\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}